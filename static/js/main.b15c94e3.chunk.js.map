{"version":3,"sources":["components/header.js","components/Graph.js","components/App.js","serviceWorker.js","index.js"],"names":["Text","Typography","Option","Select","Header","setLayout","layout","handleFiles","setReport","fileData","generateReport","source","setSource","style","display","flexWrap","width","margin","value","onChange","onClick","fileTypes","base64","multipleFiles","Graph","state","mobile","result","cy","filter","element","i","isNode","degree","$","dc","root","id","directed","closeness","cc","toFixed","betweeness","bc","betweenness","indegree","outdegree","setTimeout","window","scrollTo","document","body","scrollHeight","props","files","reader","FileReader","onload","e","setState","JSON","parse","target","readAsText","name","minNodeSpacing","run","nextprops","this","innerWidth","dimensions","height","example1","elements","border","on","evt","node","console","log","setMetrics","maxDegree","example2","stylesheet","example2Style","React","Component","App","useState","metrics","report","flexDirection","alignItems","title","textAlign","disabled","padding","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b15c94e3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Typography, Select, Button } from \"antd\";\r\nimport ReactFileReader from \"react-file-reader\";\r\nconst { Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst Header = ({\r\n  setLayout,\r\n  layout,\r\n  setReport,\r\n  handleFiles,\r\n  fileData,\r\n  generateReport,\r\n  source,\r\n  setSource\r\n}) => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n      <div>\r\n        <Text>Seleccione layout de grafo</Text>\r\n        <Select\r\n          style={{ width: 120, margin: 10 }}\r\n          value={layout}\r\n          onChange={value => setLayout(value)}\r\n        >\r\n          <Option value={\"random\"}>Random</Option>\r\n          <Option value={\"cose\"}>Compound Spring Embedder</Option>\r\n          <Option value={\"breadthfirst\"}>Breadthfirs</Option>\r\n          <Option value={\"circle\"}>Circle</Option>\r\n          <Option value={\"concentric\"}>Concentric</Option>\r\n        </Select>\r\n      </div>\r\n      <div>\r\n        <Text>Seleccione Source del grafo</Text>\r\n        <Select\r\n          style={{ width: 220, margin: 10 }}\r\n          value={source}\r\n          onChange={value => setSource(value)}\r\n        >\r\n          <Option value={\"example1\"}>Ejemplo 1</Option>\r\n          <Option value={\"example2\"}>Ejemplo 2 </Option>\r\n          {fileData && <Option value={\"file\"}>Archivo </Option>}\r\n        </Select>\r\n      </div>\r\n      <div style={{ margin: \"auto\", display: \"flex\", flexWrap: \"wrap\" }}>\r\n        <Button onClick={generateReport}>Generar Reporte</Button>\r\n        <ReactFileReader\r\n          fileTypes={[\".json\"]}\r\n          base64={false}\r\n          multipleFiles={false}\r\n          handleFiles={handleFiles}\r\n        >\r\n          <Button> Cargar desde archivo</Button>\r\n        </ReactFileReader>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport CytoscapeComponent from \"react-cytoscapejs\";\r\n//import networks from \"./data/networks\";\r\nimport \"antd/dist/antd.css\";\r\n//import \"./index.css\";\r\nimport example2 from \"./../data/example2.json\";\r\nimport example2Style from \"./../data/example2-style.json\";\r\nimport example1 from \"./../data/example1.json\";\r\nimport Header from \"./header\";\r\n\r\nclass Graph extends React.Component {\r\n  state = {\r\n    layout: \"concentric\",\r\n    source: \"example1\",\r\n    fileData: null,\r\n    mobile: false\r\n  };\r\n  shouldComponentUpdate(props, nextprops) {\r\n    return (\r\n      this.state.layout !== nextprops.layout ||\r\n      this.state.source !== nextprops.source\r\n    );\r\n  }\r\n  componentWillMount(){\r\n    if (window.innerWidth < 420)\r\n    this.setState({mobile: window.innerWidth < 420})\r\n  }\r\n\r\n  componentDidMount() {}\r\n  render() {\r\n    let layout = {\r\n      name: this.state.layout,\r\n      minNodeSpacing: 100,\r\n      directed: true\r\n    };\r\n    const dimensions = {\r\n      width: this.state.mobile ? \"90vw\": \"80vw\",\r\n      height:this.state.mobile ? \"500px\":  \"600px\",\r\n      margin: this.state.mobile ?  \"auto\" : \"\"\r\n    }\r\n    return (\r\n      <div>\r\n        <Header\r\n          setLayout={this.setLayout}\r\n          layout={this.state.layout}\r\n          handleFiles={this.handleFiles}\r\n          generateReport={this.generateReport}\r\n          fileData={this.state.fileData}\r\n          setReport={this.props.setReport}\r\n          source={this.state.source}\r\n          setSource={this.setSource}\r\n        />\r\n        {this.state.source === \"example1\" && example1 && (\r\n          <CytoscapeComponent\r\n            elements={example1}\r\n            style={{\r\n             ...dimensions,\r\n              border: \"solid 5px black\"\r\n            }}\r\n            layout={layout}\r\n            cy={cy => {\r\n              cy.on(\"tap\", \"node\", evt => {\r\n                var node = evt.target;\r\n                console.log(\"tapped \" + node.id());\r\n                this.props.setMetrics({\r\n                  closeness: cy\r\n                    .$()\r\n                    .cc({ root: \"#\" + node.id(), directed: false }),\r\n                  betweeness: cy\r\n                    .$()\r\n                    .bc()\r\n                    .betweenness(\"#\" + node.id()),\r\n                  degree: cy.$().dc({ root: \"#\" + node.id(), directed: true })\r\n                });\r\n                console.log(\"max\", cy.$().maxDegree(false));\r\n              });\r\n              this.cy = cy;\r\n            }}\r\n          />\r\n        )}\r\n        {this.state.source === \"file\" && this.state.fileData && (\r\n          <CytoscapeComponent\r\n            elements={this.state.fileData}\r\n            style={{\r\n              ...dimensions,\r\n              border: \"solid 5px black\"\r\n            }}\r\n            layout={layout}\r\n            cy={cy => {\r\n              cy.on(\"tap\", \"node\", evt => {\r\n                var node = evt.target;\r\n                console.log(\"tapped \" + node.id());\r\n                this.props.setMetrics({\r\n                  closeness: cy\r\n                    .$()\r\n                    .cc({ root: \"#\" + node.id(), directed: false }),\r\n                  betweeness: cy\r\n                    .$()\r\n                    .bc()\r\n                    .betweenness(\"#\" + node.id()),\r\n                  degree: cy.$().dc({ root: \"#\" + node.id(), directed: true })\r\n                });\r\n                console.log(\"max\", cy.$().maxDegree(false));\r\n              });\r\n              this.cy = cy;\r\n            }}\r\n          />\r\n        )}\r\n        {this.state.source === \"example2\" && example2 && (\r\n          <CytoscapeComponent\r\n            elements={example2}\r\n            stylesheet={example2Style}\r\n            style={{\r\n              ...dimensions,\r\n              border: \"solid 5px black\"\r\n            }}\r\n            layout={layout}\r\n            cy={cy => {\r\n              cy.on(\"tap\", \"node\", evt => {\r\n                var node = evt.target;\r\n                this.props.setMetrics({\r\n                  closeness: cy\r\n                    .$()\r\n                    .cc({ root: \"#\" + node.id(), directed: false }),\r\n                  betweeness: cy\r\n                    .$()\r\n                    .bc()\r\n                    .betweenness(\"#\" + node.id()),\r\n                  degree: cy.$().dc({ root: \"#\" + node.id(), directed: true })\r\n                });\r\n              });\r\n              this.cy = cy;\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  generateReport = () => {\r\n    let result = \"\";\r\n    let cy = this.cy;\r\n    cy.filter(function(element, i) {\r\n      if (element.isNode()) {\r\n        const degree = cy.$().dc({ root: \"#\" + element.id(), directed: true });\r\n        const closeness = cy\r\n          .$()\r\n          .cc({ root: \"#\" + element.id(), directed: false })\r\n          .toFixed(2);\r\n        const betweeness = cy\r\n          .$()\r\n          .bc()\r\n          .betweenness(\"#\" + element.id())\r\n          .toFixed(2);\r\n        result +=\r\n          `Nodo ${element.id()}: ` +\r\n          `Closeness: ${closeness} - Betweeness: ${betweeness} - ` +\r\n          `Indegree: ${degree.indegree} - Outdegree: ${degree.outdegree} \\n`;\r\n\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    setTimeout(() => {\r\n      window.scrollTo(0, document.body.scrollHeight);\r\n    }, 500);\r\n    this.props.setReport(result);\r\n  };\r\n\r\n  handleFiles = files => {\r\n    let reader = new FileReader();\r\n    reader.onload = e => {\r\n      this.setState({ fileData: JSON.parse(e.target.result), source: \"file\" });\r\n    };\r\n    reader.readAsText(files[0]);\r\n    this.props.setReport(null)\r\n  };\r\n\r\n  setLayout = value => {\r\n    this.cy\r\n      .layout({\r\n        name: value,\r\n        minNodeSpacing: 100,\r\n        directed: true\r\n      })\r\n      .run();\r\n    this.setState({ layout: value });\r\n  };\r\n  \r\n  setSource = value => {\r\n    this.setState({ source: value });\r\n    this.props.setReport(null);\r\n  };\r\n}\r\n\r\nexport default Graph;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Graph from \"./Graph\";\nimport { Tooltip } from \"antd\";\n\nconst App = () => {\n  const [metrics, setMetrics] = useState({\n    closeness: 0,\n    betweeness: 0,\n    degree: { indegree: 0, outdegree: 0 }\n  });\n  const [report, setReport] = useState(\"\");\n  return (\n    <div\n      style={{ display: \"flex\", flexWrap: \"wrap\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      <Tooltip title=\"Haga click en un nodo del grafo para obtener los datos asociados\">\n        <div style={{ display: \"flex\", flexWrap: \"wrap\"}}>\n          <h1 style={{ margin: 10 }}>\n            Closeness:{metrics.closeness.toFixed(2)}\n          </h1>\n          <h1 style={{ margin: 10 }}>\n            Betweennes:{metrics.betweeness.toFixed(2)}\n          </h1>\n          <h1 style={{ margin: 10 }}>Indegree:{metrics.degree.indegree}</h1>\n          <h1 style={{ margin: 10 }}>Outdegree:{metrics.degree.outdegree}</h1>\n        </div>\n      </Tooltip>\n      <Graph setMetrics={setMetrics} setReport={setReport} />\n      {report && (\n        <div style={{width: \"60%\"}}>\n          <h1 style={{ margin: 10, textAlign: \"center\" }}>Reporte</h1>\n          <textarea\n            disabled\n            name=\"textarea\"\n            style={{\n              width: \"100%\",\n              height: \"40vh\",\n              padding: \"1%\",\n              textAlign: \"center\"\n            }}\n          >\n            {report}\n          </textarea>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}